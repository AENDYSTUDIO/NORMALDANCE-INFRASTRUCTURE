#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–∞
 * –ü–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —É–º–µ–Ω—å—à–∏—Ç—å —Ä–∞–∑–º–µ—Ä –±–∞–Ω–¥–ª–∞
 */

import { execSync } from "child_process";
import fs from "fs";
import path from "path";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–Ω–¥–ª–∞
function analyzeBundle() {
  console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–∞...");

  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
    process.env.ANALYZE = "true";

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É —Å –∞–Ω–∞–ª–∏–∑–æ–º
    console.log("üî® –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É —Å –∞–Ω–∞–ª–∏–∑–æ–º –±–∞–Ω–¥–ª–∞...");
    execSync("npm run build", { stdio: "inherit" });

    console.log("‚úÖ –ê–Ω–∞–ª–∏–∑ –±–∞–Ω–¥–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
    console.log("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .next/analyze/");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –æ—Ç—á–µ—Ç–∞
    const analyzeDir = path.join(process.cwd(), ".next", "analyze");
    if (fs.existsSync(analyzeDir)) {
      const files = fs.readdirSync(analyzeDir);
      console.log("\n–§–∞–π–ª—ã –æ—Ç—á–µ—Ç–∞:");
      files.forEach((file) => {
        console.log(`  - ${file}`);
      });
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –±–∞–Ω–¥–ª–∞:", error.message);
    process.exit(1);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–æ–≤
function optimizeImports() {
  console.log("üîß –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤...");

  // –°–ø–∏—Å–æ–∫ —Ç—è–∂–µ–ª—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å
  const heavyLibraries = [
    "@solana/web3.js",
    "@solana/wallet-adapter-react",
    "@solana/wallet-adapter-wallets",
    "lucide-react",
    "@radix-ui/react-icons",
  ];

  console.log("–¢—è–∂–µ–ª—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:");
  heavyLibraries.forEach((lib) => {
    console.log(`  - ${lib}`);
  });

  console.log("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:");
  console.log("1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤");
  console.log(
    "2. –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ tree shaking –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —ç–∫—Å–ø–æ—Ä—Ç–æ–≤"
  );
  console.log("3. –†–∞–∑–¥–µ–ª—è–π—Ç–µ –∫–æ–¥ –Ω–∞ —á–∞–Ω–∫–∏ –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏");
  console.log(
    "4. –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç—è–∂–µ–ª—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º –ø—É—Ç–∏"
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function checkDuplicateDependencies() {
  console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...");

  try {
    const result = execSync("npm ls --depth=0", { encoding: "utf8" });
    console.log("–î–µ—Ä–µ–≤–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:");
    console.log(result);
  } catch (error) {
    console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ä–µ–≤–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π");
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log("=== –ê–Ω–∞–ª–∏–∑ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–∞ ===\n");

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  checkDuplicateDependencies();

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
  optimizeImports();

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–Ω–¥–ª
  analyzeBundle();

  console.log("\n=== –ó–∞–≤–µ—Ä—à–µ–Ω–æ ===");
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  main();
}
