#!/bin/bash

# üß™ NORMAL DANCE - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ REG.RU —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/test-regru-deployment.sh

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_IP="31.31.196.214"
SSH_USER="u3284463"
TEST_DOMAINS=("normaldance.ru" "www.normaldance.ru")
TEST_TIMEOUT=30

log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] $*${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ $*${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $*${NC}"
}

error() {
    echo -e "${RED}‚ùå $*${NC}"
    exit 1
}

info() {
    echo -e "${PURPLE}‚ÑπÔ∏è  $*${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –¥–æ—Å—Ç—É–ø–∞
test_ssh_access() {
    log "üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSH –¥–æ—Å—Ç—É–ø–∞..."

    if ssh -o ConnectTimeout=10 -o BatchMode=yes ${SSH_USER}@${SERVER_IP} "echo 'SSH OK'" 2>/dev/null; then
        success "SSH –¥–æ—Å—Ç—É–ø —Ä–∞–±–æ—Ç–∞–µ—Ç"
        SSH_CMD="ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SERVER_IP}"
        return 0
    else
        error "SSH –¥–æ—Å—Ç—É–ø –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
test_network_access() {
    log "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞..."

    for domain in "${TEST_DOMAINS[@]}"; do
        log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–∞: ${domain}"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        IP_ADDRESS=$(dig +short "${domain}" @8.8.8.8 2>/dev/null || echo "")

        if [[ "${IP_ADDRESS}" == "${SERVER_IP}" ]]; then
            success "DNS –¥–ª—è ${domain} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        else
            warning "DNS –¥–ª—è ${domain} —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ ${IP_ADDRESS}, –æ–∂–∏–¥–∞–ª–æ—Å—å ${SERVER_IP}"
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "http://${domain}" 2>/dev/null || echo "000")

        if [[ "${HTTP_STATUS}" == "200" ]]; then
            success "HTTP –¥–ª—è ${domain}: ${HTTP_STATUS}"
        elif [[ "${HTTP_STATUS}" == "301" ]] || [[ "${HTTP_STATUS}" == "302" ]]; then
            success "–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è ${domain}: ${HTTP_STATUS}"
        else
            warning "HTTP –¥–ª—è ${domain}: ${HTTP_STATUS}"
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS
        HTTPS_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -k --max-time 10 "https://${domain}" 2>/dev/null || echo "000")

        if [[ "${HTTPS_STATUS}" == "200" ]]; then
            success "HTTPS –¥–ª—è ${domain}: ${HTTPS_STATUS}"
        else
            warning "HTTPS –¥–ª—è ${domain}: ${HTTPS_STATUS}"
        fi

        # –ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞
        RESPONSE_TIME=$(curl -s -o /dev/null -w "%{time_total}" --max-time 10 "http://${domain}" 2>/dev/null || echo "0")

        if (( $(echo "${RESPONSE_TIME} < 3.0" | bc -l 2>/dev/null || echo "1") )); then
            success "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è ${domain}: ${RESPONSE_TIME}s"
        else
            warning "–í—ã—Å–æ–∫–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è ${domain}: ${RESPONSE_TIME}s"
        fi
    done
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
test_server_services() {
    log "üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx
    if ${SSH_CMD} "sudo systemctl is-active nginx" 2>/dev/null; then
        success "Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if ${SSH_CMD} "sudo nginx -t" 2>/dev/null; then
            success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
        else
            error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
        fi
    else
        error "Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL
    if ${SSH_CMD} "sudo systemctl is-active mysql" 2>/dev/null; then
        success "MySQL —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "MySQL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2
    if ${SSH_CMD} "pm2 list" 2>/dev/null; then
        success "PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        if ${SSH_CMD} "pm2 list | grep normaldance" 2>/dev/null; then
            success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ PM2"
        else
            error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ PM2"
        fi
    else
        warning "PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    if ${SSH_CMD} "netstat -tlnp | grep :80" 2>/dev/null; then
        success "–ü–æ—Ä—Ç 80 –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
    else
        error "–ü–æ—Ä—Ç 80 –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
    fi

    if ${SSH_CMD} "netstat -tlnp | grep :3000" 2>/dev/null; then
        success "–ü–æ—Ä—Ç 3000 –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
    else
        warning "–ü–æ—Ä—Ç 3000 –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
test_database() {
    log "üóÑÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if ${SSH_CMD} "mysql -h localhost -u u3284463_default -p[–ü–ê–†–û–õ–¨_–ë–î] u3284463_default -e 'SELECT 1'" 2>/dev/null; then
        success "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    TABLES_COUNT=$(${SSH_CMD} "mysql -h localhost -u u3284463_default -p[–ü–ê–†–û–õ–¨_–ë–î] u3284463_default -e 'SHOW TABLES' 2>/dev/null | wc -l" 2>/dev/null || echo "0")

    if [[ "${TABLES_COUNT}" -gt "0" ]]; then
        success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∞–±–ª–∏—Ü—ã: ${TABLES_COUNT}"
    else
        warning "–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç —Ç–∞–±–ª–∏—Ü –∏–ª–∏ –æ—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –±–∞–∑—ã
    DB_SIZE=$(${SSH_CMD} "du -sb /var/lib/mysql/u3284463_default 2>/dev/null | cut -f1" 2>/dev/null || echo "0")
    DB_SIZE_MB=$(( DB_SIZE / 1024 / 1024 ))

    log "–†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${DB_SIZE_MB} MB"

    if [[ "${DB_SIZE_MB}" -lt "1000" ]]; then
        success "–†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–æ—Ä–º–µ"
    else
        warning "–ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${DB_SIZE_MB} MB"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
test_application() {
    log "üéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health endpoint
    for domain in "${TEST_DOMAINS[@]}"; do
        log "Health check –¥–ª—è ${domain}"

        HEALTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "http://${domain}/api/health" 2>/dev/null || echo "000")

        if [[ "${HEALTH_STATUS}" == "200" ]]; then
            success "Health check –¥–ª—è ${domain}: ${HEALTH_STATUS}"
        else
            warning "Health check –¥–ª—è ${domain}: ${HEALTH_STATUS}"
        fi
    done

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints
    API_TESTS=(
        "api/info:200"
        "api/tracks:200"
        "api/users:200"
    )

    for test in "${API_TESTS[@]}"; do
        endpoint="${test%:*}"
        expected_code="${test#*:}"

        for domain in "${TEST_DOMAINS[@]}"; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "http://${domain}/${endpoint}" 2>/dev/null || echo "000")

            if [[ "${STATUS}" == "${expected_code}" ]]; then
                success "API ${endpoint} –¥–ª—è ${domain}: ${STATUS}"
            else
                warning "API ${endpoint} –¥–ª—è ${domain}: ${STATUS} (–æ–∂–∏–¥–∞–ª–æ—Å—å ${expected_code})"
            fi
        done
    done
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
test_performance() {
    log "‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."

    local domain="normaldance.ru"

    # –ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    MAIN_PAGE_TIME=$(curl -s -o /dev/null -w "%{time_total}" --max-time 10 "http://${domain}" 2>/dev/null || echo "0")

    if (( $(echo "${MAIN_PAGE_TIME} < 3.0" | bc -l 2>/dev/null || echo "1") )); then
        success "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∑–∞ ${MAIN_PAGE_TIME}s"
    else
        warning "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ: ${MAIN_PAGE_TIME}s"
    fi

    # –ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ API
    API_TIME=$(curl -s -o /dev/null -w "%{time_total}" --max-time 10 "http://${domain}/api/health" 2>/dev/null || echo "0")

    if (( $(echo "${API_TIME} < 1.0" | bc -l 2>/dev/null || echo "1") )); then
        success "API –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ ${API_TIME}s"
    else
        warning "API –æ—Ç–≤–µ—á–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ: ${API_TIME}s"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    PAGE_SIZE=$(curl -s "http://${domain}" --max-time 10 2>/dev/null | wc -c || echo "0")

    if [[ "${PAGE_SIZE}" -gt "0" ]] && [[ "${PAGE_SIZE}" -lt "5000000" ]]; then
        success "–†–∞–∑–º–µ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: $((PAGE_SIZE / 1024)) KB"
    else
        warning "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${PAGE_SIZE} –±–∞–π—Ç"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
test_security() {
    log "üîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."

    local domain="normaldance.ru"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ security headers
    HEADERS=$(curl -s -I "http://${domain}" --max-time 10 2>/dev/null || echo "")

    if echo "${HEADERS}" | grep -q "X-Frame-Options"; then
        success "X-Frame-Options header —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        warning "X-Frame-Options header –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi

    if echo "${HEADERS}" | grep -q "X-Content-Type-Options"; then
        success "X-Content-Type-Options header —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        warning "X-Content-Type-Options header –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi

    if echo "${HEADERS}" | grep -q "Strict-Transport-Security"; then
        success "HSTS header —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        warning "HSTS header –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    if curl -s -I "https://${domain}" --max-time 10 2>/dev/null | grep -q "HTTP/2\|HTTP/1.1 200"; then
        success "HTTPS —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω"
    else
        warning "–ü—Ä–æ–±–ª–µ–º—ã —Å HTTPS —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    SENSITIVE_FILES=$(${SSH_CMD} "find /var/www/${SSH_USER}/data/www/normaldance.ru -name '.env*' -o -name '*.key' -o -name '*.pem' 2>/dev/null | wc -l" 2>/dev/null || echo "0")

    if [[ "${SENSITIVE_FILES}" -eq "0" ]]; then
        success "–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    else
        error "–ù–∞–π–¥–µ–Ω–æ ${SENSITIVE_FILES} —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
generate_test_report() {
    log "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."

    local report_file="regru-deployment-test-$(date +%Y%m%d-%H%M%S).md"

    cat > "../reports/${report_file}" << EOF
# üß™ –û—Ç—á–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ REG.RU

## –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
- **–î–∞—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**: $(date)
- **–°–µ—Ä–≤–µ—Ä**: ${SERVER_IP}
- **–î–æ–º–µ–Ω—ã**: $(echo "${TEST_DOMAINS[@]}" | tr ' ' ', ')
- **–°—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è**: $(if [[ $? -eq 0 ]]; then echo "‚úÖ –£–°–ü–ï–®–ù–û"; else echo "‚ùå –ù–ï–£–î–ê–ß–ù–û"; fi)

## –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

### üîê –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É
$(if ssh -o ConnectTimeout=5 -o BatchMode=yes ${SSH_USER}@${SERVER_IP} "echo 'OK'" 2>/dev/null; then
    echo "- ‚úÖ SSH –¥–æ—Å—Ç—É–ø —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "- ‚ùå SSH –¥–æ—Å—Ç—É–ø –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi)

### üåê –î–æ–º–µ–Ω—ã –∏ —Å–µ—Ç—å
$(for domain in "${TEST_DOMAINS[@]}"; do
    DNS_IP=$(dig +short "${domain}" @8.8.8.8 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --max-time 5 "http://${domain}" 2>/dev/null || echo "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    echo "- **${domain}**: DNS=${DNS_IP}, HTTP=${HTTP_STATUS}"
done)

### üîß –°–µ—Ä–≤–∏—Å—ã —Å–µ—Ä–≤–µ—Ä–∞
$(if ${SSH_CMD} "sudo systemctl is-active nginx" 2>/dev/null; then
    echo "- ‚úÖ Nginx: —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "- ‚ùå Nginx: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi)

$(if ${SSH_CMD} "sudo systemctl is-active mysql" 2>/dev/null; then
    echo "- ‚úÖ MySQL: —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "- ‚ùå MySQL: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi)

$(if ${SSH_CMD} "pm2 list | grep normaldance" 2>/dev/null; then
    echo "- ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ PM2"
else
    echo "- ‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi)

### üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
$(DB_STATUS=$(mysql -h localhost -u u3284463_default -p[–ü–ê–†–û–õ–¨_–ë–î] -e 'SELECT 1' 2>/dev/null && echo "–¥–æ—Å—Ç—É–ø–Ω–∞" || echo "–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
echo "- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${DB_STATUS}")

$(TABLES_COUNT=$(${SSH_CMD} "mysql -h localhost -u u3284463_default -p[–ü–ê–†–û–õ–¨_–ë–î] -e 'SHOW TABLES' 2>/dev/null | wc -l" 2>/dev/null || echo "0")
echo "- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü: ${TABLES_COUNT}")

### ‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
$(MAIN_TIME=$(curl -s -o /dev/null -w "%{time_total}" --max-time 5 "http://normaldance.ru" 2>/dev/null || echo "0")
echo "- –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${MAIN_TIME}s")

$(API_TIME=$(curl -s -o /dev/null -w "%{time_total}" --max-time 5 "http://normaldance.ru/api/health" 2>/dev/null || echo "0")
echo "- –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ API: ${API_TIME}s")

### üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
$(SECURITY_HEADERS=$(curl -s -I "http://normaldance.ru" --max-time 5 2>/dev/null | grep -c "X-Frame-Options\|X-Content-Type-Options\|Strict-Transport-Security" || echo "0")
echo "- Security headers: ${SECURITY_HEADERS} –Ω–∞–π–¥–µ–Ω–æ")

$(HTTPS_WORKS=$(curl -s -I "https://normaldance.ru" --max-time 5 2>/dev/null | grep -q "200\|301\|302" && echo "–¥–∞" || echo "–Ω–µ—Ç")
echo "- HTTPS —Ä–∞–±–æ—Ç–∞–µ—Ç: ${HTTPS_WORKS}")

## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

$(if [[ $? -eq 0 ]]; then
    cat << RECOMMENDATIONS_EOF
### ‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ

**–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:**
1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –ø–∞–Ω–µ–ª–∏ Ispmanager
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
5. –û–±–Ω–æ–≤–∏—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

**–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:**
\`\`\`bash
# –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
pm2 status

# –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
pm2 logs normaldance

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
pm2 restart normaldance

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
sudo systemctl status nginx mysql
\`\`\`
RECOMMENDATIONS_EOF
else
    cat << RECOMMENDATIONS_EOF
### ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

**–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:**
1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
3. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ DNS –∑–∞–ø–∏—Å–∏

**–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:**
\`\`\`bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
tail -f /var/log/nginx/normaldance.ru_error.log
pm2 logs normaldance

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
ps aux | grep -E 'nginx|node|mysql'

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
netstat -tlnp | grep -E ':(80|3000|3306)'
\`\`\`
RECOMMENDATIONS_EOF
fi)

## –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏

- **–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è**: https://server172.hosting.reg.ru:1500/
- **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ REG.RU**: +7 (495) 580-11-11
- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: $(echo "${report_file}" | sed 's/.md//')

---
*–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–º test-regru-deployment.sh*
EOF

    success "–û—Ç—á–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω: reports/${report_file}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üß™ –ù–ê–ß–ê–õ–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø NORMAL DANCE –ù–ê REG.RU"

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
    mkdir -p ../reports

    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
    test_ssh_access
    test_network_access
    test_server_services
    test_database
    test_application
    test_performance
    test_security

    generate_test_report

    log "üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û"
    echo ""
    echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É: $(if ssh -o ConnectTimeout=5 -o BatchMode=yes ${SSH_USER}@${SERVER_IP} 'echo OK' 2>/dev/null; then echo '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç'; else echo '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'; fi)"
    echo "‚Ä¢ –î–æ–º–µ–Ω—ã: $(for domain in "${TEST_DOMAINS[@]}"; do echo -n "${domain} "; done)"
    echo "‚Ä¢ –°–µ—Ä–≤–∏—Å—ã: $(if ${SSH_CMD} "sudo systemctl is-active nginx mysql" 2>/dev/null; then echo '‚úÖ –†–∞–±–æ—Ç–∞—é—Ç'; else echo '‚ùå –ü—Ä–æ–±–ª–µ–º—ã'; fi)"
    echo "‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $(if ${SSH_CMD} "mysql -h localhost -u u3284463_default -p[–ü–ê–†–û–õ–¨_–ë–î] -e 'SELECT 1'" 2>/dev/null; then echo '‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞'; else echo '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞'; fi)"
    echo ""
    echo "üìä –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –≤ —Ñ–∞–π–ª–µ: reports/$(ls -t ../reports/regru-deployment-test-*.md 2>/dev/null | head -1)"
}

# –ó–∞–ø—É—Å–∫
main "$@"