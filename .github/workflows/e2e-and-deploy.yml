name: E2E Tests and Deployment

on:
  push:
    branches: [main, develop]

env:
  NODE_VERSION: "20.10.0"
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Запуск E2E тестов
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_APP_URL: https://normaldance.com

      - name: Start application server
        run: |
          npm run start &
          # Wait for server to start
          sleep 10

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          CI: true
          NODE_ENV: test

  # Сборка артефактов
  build-artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_APP_URL: https://normaldance.com

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next/
          retention-days: 30

  # Уведомление о статусе
  notification:
    name: Status Notification
    runs-on: ubuntu-latest
    needs: [e2e-tests, build-artifacts]
    if: always()
    steps:
      - name: Status notification
        run: |
          if [[ "${{ needs.e2e-tests.result }}" == "success" && "${{ needs.build-artifacts.result }}" == "success" ]]; then
            echo "✅ All checks passed successfully!"
          else
            echo "❌ Some checks failed!"
            exit 1
          fi
