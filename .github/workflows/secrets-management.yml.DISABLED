name: Secrets Management

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to manage'
        required: true
        default: 'staging'
        type: choice
        options:
          - dev
          - staging
          - production

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm ci
      - run: node scripts/secrets-manager.js validate --env ${{ matrix.environment }}
      - name: Upload validation results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: validation-results
          path: validation-report.json

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm ci
      - run: node scripts/security-monitor.js --env ${{ matrix.environment }} --format json --output security-report.json
      - name: Upload security report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-report
          path: security-report.json

  rotate-secrets:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm ci
      - run: node scripts/rotate-secrets.js --env ${{ matrix.environment }} --notify
      - name: Upload rotation log
        uses: actions/upload-artifact@v3
        with:
          name: rotation-log
          path: secrets-rotation.log
