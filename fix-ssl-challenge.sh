#!/bin/bash

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Nginx –¥–ª—è Let's Encrypt challenge..."

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ HTTP challenge
cat > /etc/nginx/sites-available/normaldance.ru << 'EOF'
server {
    listen 80;
    server_name normaldance.ru www.normaldance.ru;
    root /var/www/normaldance.ru;
    client_max_body_size 100M;

    # –í–∞–∂–Ω–æ: –ó–∞–ø—Ä–æ—Å—ã –∫ .well-known –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –î–û –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
        access_log off;
        log_not_found off;
        try_files $uri =404;
    }

    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ HTTPS (–∏—Å–∫–ª—é—á–∞—è .well-known)
    location / {
        # return 301 https://$server_name$request_uri;
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API —Ä–æ—É—Ç—ã
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã Next.js
    location /_next/static/ {
        proxy_pass http://localhost:3000;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}
EOF

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
nginx -t

if [ $? -eq 0 ]; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    systemctl reload nginx
    echo "‚úÖ Nginx –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ .well-known –ø—É—Ç–∏
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ .well-known –ø—É—Ç–∏..."
    mkdir -p /var/www/html/.well-known/acme-challenge
    echo "test-content-$(date +%s)" > /var/www/html/.well-known/acme-challenge/test.txt

    sleep 2
    TEST_RESPONSE=$(curl -s http://localhost/.well-known/acme-challenge/test.txt)
    if [[ $TEST_RESPONSE == *"test-content"* ]]; then
        echo "‚úÖ .well-known –ø—É—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        echo "‚ùå .well-known –ø—É—Ç—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi

else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    exit 1
fi

echo ""
echo "üéØ –ì–û–¢–û–í–û –ö –ü–û–õ–£–ß–ï–ù–ò–Æ SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–ê!"
echo ""
echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:"
echo "certbot --webroot -w /var/www/html -d normaldance.ru -d www.normaldance.ru"
echo ""
echo "–ò–ª–∏ —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è REG.RU –ø–æ–ª—É—á–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤—Ä—É—á–Ω—É—é."