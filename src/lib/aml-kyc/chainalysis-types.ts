/**
 * üîó Chainalysis API Types - Blockchain Analytics Integration
 *
 * –¢–∏–ø—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Chainalysis API
 * –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –±–ª–æ–∫—á–µ–π–Ω-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –∞–¥—Ä–µ—Å–æ–≤
 */

// ============================================================================
// –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã Chainalysis API
// ============================================================================

/**
 * –£—Ä–æ–≤–Ω–∏ —Ä–∏—Å–∫–∞ Chainalysis
 */
export type ChainalysisRiskLevel = "LOW" | "MEDIUM" | "HIGH" | "SEVERE";

/**
 * –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥—Ä–µ—Å–æ–≤ Chainalysis
 */
export type ChainalysisCategory =
  | "EXCHANGE"
  | "GAMBLING"
  | "ILLEGAL"
  | "MIXER"
  | "MARKETPLACE"
  | "MINING"
  | "SCAM"
  | "WALLET"
  | "OTHER";

/**
 * –¢–∏–ø—ã –∞–∫—Ç–∏–≤–æ–≤ Chainalysis
 */
export type ChainalysisAsset =
  | "BTC"
  | "ETH"
  | "SOL"
  | "USDT"
  | "USDC"
  | "DAI"
  | "OTHER";

/**
 * –°—Ç–∞—Ç—É—Å—ã –∞–Ω–∞–ª–∏–∑–∞
 */
export type ChainalysisAnalysisStatus = "PENDING" | "COMPLETED" | "FAILED";

// ============================================================================
// –¢–∏–ø—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞–¥—Ä–µ—Å–æ–≤
// ============================================================================

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∞–¥—Ä–µ—Å–∞
 */
export interface ChainalysisAddressAnalysis {
  address: string;
  asset: ChainalysisAsset;
  risk: ChainalysisRiskLevel;
  confidence: number; // 0-100
  categories: ChainalysisCategory[];
  identifications: ChainalysisIdentification[];
  exposure: ChainalysisExposure;
  firstSeen: string; // ISO 8601
  lastSeen: string; // ISO 8601
  totalReceived: number;
  totalSent: number;
  balance: number;
  transactionCount: number;
  labels: string[];
  metadata: Record<string, any>;
}

/**
 * –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞
 */
export interface ChainalysisIdentification {
  entity: string;
  category: ChainalysisCategory;
  confidence: number; // 0-100
  description: string;
  url?: string;
  source: string;
}

/**
 * –≠–∫—Å–ø–æ–∑–∏—Ü–∏—è —Ä–∏—Å–∫–∞
 */
export interface ChainalysisExposure {
  direct: number; // –ü—Ä—è–º–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è –≤ %
  indirect: number; // –ö–æ—Å–≤–µ–Ω–Ω–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è –≤ %
  total: number; // –û–±—â–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è –≤ %
  breakdown: {
    category: ChainalysisCategory;
    amount: number;
    percentage: number;
  }[];
}

// ============================================================================
// –¢–∏–ø—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
// ============================================================================

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 */
export interface ChainalysisTransactionAnalysis {
  transactionHash: string;
  asset: ChainalysisAsset;
  timestamp: string; // ISO 8601
  blockNumber: number;
  fromAddress: string;
  toAddress: string;
  amount: number;
  risk: ChainalysisRiskLevel;
  confidence: number; // 0-100
  categories: ChainalysisCategory[];
  identifications: ChainalysisIdentification[];
  exposure: ChainalysisExposure;
  inputs: ChainalysisTransactionInput[];
  outputs: ChainalysisTransactionOutput[];
  labels: string[];
  metadata: Record<string, any>;
}

/**
 * –í—Ö–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 */
export interface ChainalysisTransactionInput {
  address: string;
  amount: number;
  risk: ChainalysisRiskLevel;
  categories: ChainalysisCategory[];
  identifications: ChainalysisIdentification[];
}

/**
 * –í—ã—Ö–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 */
export interface ChainalysisTransactionOutput {
  address: string;
  amount: number;
  risk: ChainalysisRiskLevel;
  categories: ChainalysisCategory[];
  identifications: ChainalysisIdentification[];
}

// ============================================================================
// –¢–∏–ø—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
// ============================================================================

/**
 * –ü—Ä–∞–≤–∏–ª–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Chainalysis
 */
export interface ChainalysisMonitoringRule {
  id: string;
  name: string;
  description: string;
  isActive: boolean;
  conditions: ChainalysisMonitoringCondition[];
  actions: ChainalysisMonitoringAction[];
  createdAt: string;
  updatedAt: string;
}

/**
 * –£—Å–ª–æ–≤–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 */
export interface ChainalysisMonitoringCondition {
  field: "risk" | "category" | "amount" | "exposure" | "confidence";
  operator: "GREATER_THAN" | "LESS_THAN" | "EQUALS" | "CONTAINS" | "IN_LIST";
  value: any;
  weight?: number;
}

/**
 * –î–µ–π—Å—Ç–≤–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 */
export interface ChainalysisMonitoringAction {
  type: "ALERT" | "BLOCK" | "FLAG" | "REPORT" | "NOTIFY";
  parameters?: Record<string, any>;
}

/**
 * –°–æ–±—ã—Ç–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 */
export interface ChainalysisMonitoringEvent {
  id: string;
  ruleId: string;
  ruleName: string;
  address?: string;
  transactionHash?: string;
  asset: ChainalysisAsset;
  risk: ChainalysisRiskLevel;
  confidence: number;
  timestamp: string; // ISO 8601
  data: Record<string, any>;
  processed: boolean;
  processedAt?: string;
}

// ============================================================================
// –¢–∏–ø—ã –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
// ============================================================================

/**
 * –û—Ç—á–µ—Ç Chainalysis
 */
export interface ChainalysisReport {
  id: string;
  type:
    | "ADDRESS_ANALYSIS"
    | "TRANSACTION_ANALYSIS"
    | "PORTFOLIO_RISK"
    | "COMPLIANCE_SUMMARY";
  title: string;
  description: string;
  generatedAt: string; // ISO 8601
  generatedBy: string;
  period: {
    startDate: string; // ISO 8601
    endDate: string; // ISO 8601
  };
  data: {
    addresses?: ChainalysisAddressAnalysis[];
    transactions?: ChainalysisTransactionAnalysis[];
    summary: ChainalysisReportSummary;
  };
  metadata: Record<string, any>;
}

/**
 * –°–≤–æ–¥–∫–∞ –æ—Ç—á–µ—Ç–∞
 */
export interface ChainalysisReportSummary {
  totalAddresses: number;
  totalTransactions: number;
  riskDistribution: {
    LOW: number;
    MEDIUM: number;
    HIGH: number;
    SEVERE: number;
  };
  categoryDistribution: Record<ChainalysisCategory, number>;
  averageRiskScore: number;
  highRiskAddresses: string[];
  highRiskTransactions: string[];
}

// ============================================================================
// –¢–∏–ø—ã –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ API –∑–∞–ø—Ä–æ—Å–æ–≤
// ============================================================================

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Chainalysis
 */
export interface ChainalysisConfig {
  apiKey: string;
  apiSecret: string;
  apiUrl: string;
  environment: "SANDBOX" | "PRODUCTION";
  timeout: number; // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
  retryAttempts: number;
  retryDelay: number; // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
  webhookSecret?: string;
  monitoringEnabled: boolean;
  riskThresholds: {
    LOW: number;
    MEDIUM: number;
    HIGH: number;
    SEVERE: number;
  };
}

/**
 * –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ –∞–¥—Ä–µ—Å–∞
 */
export interface ChainalysisAddressAnalysisRequest {
  address: string;
  asset: ChainalysisAsset;
  includeTransactions?: boolean;
  transactionLimit?: number;
  includeExposure?: boolean;
  includeIdentifications?: boolean;
}

/**
 * –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 */
export interface ChainalysisTransactionAnalysisRequest {
  transactionHash: string;
  asset: ChainalysisAsset;
  includeInputs?: boolean;
  includeOutputs?: boolean;
  includeExposure?: boolean;
  includeIdentifications?: boolean;
}

/**
 * –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è
 */
export interface ChainalysisPortfolioAnalysisRequest {
  addresses: string[];
  asset: ChainalysisAsset;
  includeTransactions?: boolean;
  transactionLimit?: number;
  includeExposure?: boolean;
  includeIdentifications?: boolean;
}

// ============================================================================
// –¢–∏–ø—ã –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ API
// ============================================================================

/**
 * –ë–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç API
 */
export interface ChainalysisApiResponse<T> {
  success: boolean;
  data?: T;
  error?: ChainalysisApiError;
  metadata?: {
    requestId: string;
    timestamp: string;
    processingTime: number;
  };
}

/**
 * –û—à–∏–±–∫–∞ API
 */
export interface ChainalysisApiError {
  code: string;
  message: string;
  details?: Record<string, any>;
}

/**
 * –ü–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
 */
export interface ChainalysisPaginatedResponse<T> {
  items: T[];
  totalCount: number;
  pageSize: number;
  currentPage: number;
  hasNextPage: boolean;
  hasPreviousPage: boolean;
}

// ============================================================================
// –¢–∏–ø—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AML —Å–∏—Å—Ç–µ–º–æ–π
// ============================================================================

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AML
 */
export interface ChainalysisAMLIntegration {
  addressAnalysisId?: string;
  transactionAnalysisId?: string;
  riskScore: number; // 0-100
  riskLevel: AMLRiskLevel;
  factors: ChainalysisRiskFactor[];
  recommendations: string[];
  requiresManualReview: boolean;
  shouldBlock: boolean;
  shouldReport: boolean;
}

/**
 * –§–∞–∫—Ç–æ—Ä —Ä–∏—Å–∫–∞ Chainalysis
 */
export interface ChainalysisRiskFactor {
  category: "EXPOSURE" | "IDENTIFICATION" | "BEHAVIOR" | "NETWORK" | "VOLUME";
  name: string;
  description: string;
  score: number; // 0-100
  weight: number;
  details: Record<string, any>;
}

/**
 * –¢–∏–ø –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ AML —Ç–∏–ø–æ–≤
 */
export type AMLRiskLevel = "LOW" | "MEDIUM" | "HIGH" | "CRITICAL";

// ============================================================================
// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ç–∏–ø–æ–≤
// ============================================================================
