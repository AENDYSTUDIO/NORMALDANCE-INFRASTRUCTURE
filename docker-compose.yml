version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/nextjs.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://normaldance:password@postgres:5432/normaldance
      - REDIS_URL=redis://redis:6379
      - BACKEND_URL=http://backend:8080
      - IPFS_SERVICE_URL=http://ipfs:8080
    depends_on:
      - postgres
      - redis
      - backend
      - ipfs
    networks:
      - normaldance

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://normaldance:password@postgres:5432/normaldance
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - normaldance

  ipfs:
    build:
      context: .
      dockerfile: docker/ipfs-service.Dockerfile
    ports:
      - "8081:8080"
      - "5001:5001"
      - "4001:4001"
    environment:
      - NODE_ENV=development
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - normaldance

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=normaldance
      - POSTGRES_USER=normaldance
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - normaldance

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - normaldance

volumes:
  postgres_data:
  redis_data:
  ipfs_data:

networks:
  normaldance:
    driver: bridge