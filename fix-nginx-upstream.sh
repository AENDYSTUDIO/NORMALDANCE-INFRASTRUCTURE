#!/bin/bash

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ upstream –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
cat > /etc/nginx/sites-available/normaldance.ru << 'EOF'
upstream normaldance_backend {
    server 127.0.0.1:3000;
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: server localhost:3000;
    keepalive 32;
}

server {
    listen 80;
    listen [::]:80;
    server_name normaldance.ru www.normaldance.ru 89.104.67.165;
    root /var/www/normaldance.ru;
    client_max_body_size 100M;

    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ HTTP –Ω–∞ HTTPS
    return 301 https://$server_name$request_uri;

    # –í–∞–∂–Ω–æ –¥–ª—è Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
        access_log off;
        log_not_found off;
        try_files $uri =404;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name normaldance.ru www.normaldance.ru 89.104.67.165;
    root /var/www/normaldance.ru;
    client_max_body_size 100M;

    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/ssl/certs/normaldance.crt;
    ssl_certificate_key /etc/ssl/private/normaldance.key;

    # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    location / {
        proxy_pass http://normaldance_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Health check
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    # API —Ä–æ—É—Ç—ã
    location /api/ {
        proxy_pass http://normaldance_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è IPv6
server {
    listen [::]:80;
    server_name normaldance.ru www.normaldance.ru;
    return 301 https://$server_name$request_uri;
}

# HTTPS —Å–µ—Ä–≤–µ—Ä –¥–ª—è IPv6
server {
    listen [::]:443 ssl http2;
    server_name normaldance.ru www.normaldance.ru;

    ssl_certificate /etc/ssl/certs/normaldance.crt;
    ssl_certificate_key /etc/ssl/private/normaldance.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOF

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
nginx -t

if [ $? -eq 0 ]; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx
    systemctl reload nginx
    echo "‚úÖ Nginx –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ upstream –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ upstream –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
    sleep 3

    # –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    curl -s http://localhost:3000/api/health >/dev/null && echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

    # –¢–µ—Å—Ç —á–µ—Ä–µ–∑ Nginx
    curl -s http://localhost/api/health >/dev/null && echo "‚úÖ Nginx upstream —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå Nginx upstream –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

    echo ""
    echo "üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ù–ï–®–ù–ï–ì–û –î–û–°–¢–£–ü–ê:"

    # –¢–µ—Å—Ç HTTPS —á–µ—Ä–µ–∑ IP
    echo "üåç HTTPS API —á–µ—Ä–µ–∑ IP:"
    curl -s -k https://89.104.67.165/api/health

    echo ""
    echo ""
    echo "üìã –ï–°–õ–ò –°–ê–ô–¢ –ù–ï –†–ê–ë–û–¢–ê–ï–¢ –ß–ï–†–ï–ó –î–û–ú–ï–ù:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS: nslookup normaldance.ru"
    echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ IP –≤ –ø–∞–Ω–µ–ª–∏ REG.RU = 89.104.67.165"
    echo "3. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 5-30 –º–∏–Ω—É—Ç –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è DNS"

else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    nginx -t
fi

echo ""
echo "üéâ NGINX –ò–°–ü–†–ê–í–õ–ï–ù –ò –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!"