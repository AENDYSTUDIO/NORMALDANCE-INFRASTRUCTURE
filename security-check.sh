#!/bin/bash

# ==============================================
# üîí NORMAL DANCE SECURITY CHECK SCRIPT
# ==============================================
# –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
CRITICAL_ISSUES=0
HIGH_ISSUES=0
MEDIUM_ISSUES=0
LOW_ISSUES=0

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_critical() {
    echo -e "${RED}[CRITICAL]${NC} $1"
    ((CRITICAL_ISSUES++))
}

log_high() {
    echo -e "${RED}[HIGH]${NC} $1"
    ((HIGH_ISSUES++))
}

print_header() {
    echo -e "${BLUE}"
    echo "=========================================="
    echo "üîí NORMAL DANCE SECURITY AUDIT"
    echo "=========================================="
    echo -e "${NC}"
}

print_summary() {
    echo
    echo -e "${BLUE}=========================================="
    echo "üìä –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò"
    echo -e "${NC}"

    if [ $CRITICAL_ISSUES -gt 0 ]; then
        log_critical "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: $CRITICAL_ISSUES"
    else
        log_success "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: $CRITICAL_ISSUES"
    fi

    if [ $HIGH_ISSUES -gt 0 ]; then
        log_high "–í—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º: $HIGH_ISSUES"
    else
        log_success "–í—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º: $HIGH_ISSUES"
    fi

    log_warning "–°—Ä–µ–¥–Ω–µ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º: $MEDIUM_ISSUES"
    log_info "–ù–∏–∑–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º: $LOW_ISSUES"

    echo
    if [ $CRITICAL_ISSUES -gt 0 ] || [ $HIGH_ISSUES -gt 0 ]; then
        log_error "‚ùå –ù–∞–π–¥–µ–Ω—ã —Å–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!"
        log_info "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º."
        return 1
    else
        log_success "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞!"
        return 0
    fi
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ
check_hardcoded_secrets() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ hardcoded —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ..."

    # –ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ
    local secret_patterns=(
        "password.*=.*['\"][^'\"]*['\"]"
        "secret.*=.*['\"][^'\"]*['\"]"
        "key.*=.*['\"][^'\"]*['\"]"
        "token.*=.*['\"][^'\"]*['\"]"
        "api_key.*=.*['\"][^'\"]*['\"]"
    )

    local found_issues=0
    for pattern in "${secret_patterns[@]}"; do
        if grep -r -i "$pattern" src/ --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" 2>/dev/null | grep -v ".test." | grep -v "__tests__" | head -5; then
            log_critical "–ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ hardcoded —Å–µ–∫—Ä–µ—Ç—ã –≤ –∫–æ–¥–µ!"
            ((found_issues++))
        fi
    done

    if [ $found_issues -eq 0 ]; then
        log_success "Hardcoded —Å–µ–∫—Ä–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_environment_variables() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –≤ .env
    if [ -f ".env" ]; then
        PLACEHOLDERS=$(grep -c "your-\|GENERATE_NEW_SECRET_HERE\|password.*localhost" .env || true)
        if [ "$PLACEHOLDERS" -gt 0 ]; then
            log_high "–ù–∞–π–¥–µ–Ω–æ $PLACEHOLDERS –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –≤ .env —Ñ–∞–π–ª–µ"
        else
            log_success "–ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –≤ .env –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env –≤ .gitignore
    if [ -f ".gitignore" ]; then
        if grep -q "\.env" .gitignore; then
            log_success ".env —Ñ–∞–π–ª—ã –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ Git"
        else
            log_high ".env —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .gitignore"
        fi
    else
        log_critical ".gitignore —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –ø–∞–∫–µ—Ç–æ–≤
    if command -v npm &> /dev/null; then
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –ø–∞–∫–µ—Ç–æ–≤..."
        OUTDATED=$(npm outdated 2>/dev/null | wc -l)
        if [ "$OUTDATED" -gt 0 ]; then
            log_warning "–ù–∞–π–¥–µ–Ω–æ $OUTDATED —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –ø–∞–∫–µ—Ç–æ–≤"
        else
            log_success "–í—Å–µ –ø–∞–∫–µ—Ç—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã"
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —É—è–∑–≤–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    if command -v npm &> /dev/null; then
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
        VULNERABILITIES=$(npm audit --audit-level=moderate 2>/dev/null | grep -c "vulnerabilities" || true)
        if [ "$VULNERABILITIES" -gt 0 ]; then
            log_high "–ù–∞–π–¥–µ–Ω–æ $VULNERABILITIES —É—è–∑–≤–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
        else
            log_success "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ —É—è–∑–≤–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    fi
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
check_app_config() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è TypeScript strict mode
    if [ -f "tsconfig.json" ]; then
        if grep -q '"strict": true' tsconfig.json; then
            log_success "TypeScript strict mode –≤–∫–ª—é—á–µ–Ω"
        else
            log_warning "TypeScript strict mode –æ—Ç–∫–ª—é—á–µ–Ω"
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ next.config.ts
    if [ -f "next.config.ts" ]; then
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Next.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        if grep -q "reactStrictMode" next.config.ts; then
            log_success "React strict mode –≤–∫–ª—é—á–µ–Ω"
        else
            log_warning "React strict mode –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
    fi
}

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
check_project_structure() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    local critical_files=("package.json" "next.config.ts" "tsconfig.json" "prisma/schema.prisma")
    for file in "${critical_files[@]}"; do
        if [ ! -f "$file" ]; then
            log_warning "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
        else
            log_success "–§–∞–π–ª –Ω–∞–π–¥–µ–Ω: $file"
        fi
    done

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    local critical_dirs=("src" "prisma" "public")
    for dir in "${critical_dirs[@]}"; do
        if [ ! -d "$dir" ]; then
            log_warning "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $dir"
        else
            log_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–∞: $dir"
        fi
    done
}

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫—á–µ–π–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check_blockchain_config() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫—á–µ–π–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è devnet –≤–º–µ—Å—Ç–æ mainnet –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
    if [ -f ".env" ]; then
        if grep -q "devnet" .env; then
            log_warning "–ù–∞–π–¥–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è devnet –≤ .env (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å mainnet –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)"
        fi

        if grep -q "localhost" .env; then
            log_warning "–ù–∞–π–¥–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è localhost –≤ .env"
        fi
    fi
}

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
check_monitoring() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è health check —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
    if [ -f "src/app/api/health/route.ts" ] || [ -f "src/pages/api/health.ts" ]; then
        log_success "Health check —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–∞–π–¥–µ–Ω"
    else
        log_warning "Health check —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è error tracking
    if grep -r "sentry\|Sentry" src/ --include="*.ts" --include="*.tsx" 2>/dev/null; then
        log_success "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Sentry –Ω–∞–π–¥–µ–Ω–∞"
    else
        log_warning "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å error tracking –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
main() {
    print_header

    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
    check_hardcoded_secrets
    check_environment_variables
    check_dependencies
    check_app_config
    check_project_structure
    check_blockchain_config
    check_monitoring

    # –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤
    print_summary
}

# –ó–∞–ø—É—Å–∫
main "$@"