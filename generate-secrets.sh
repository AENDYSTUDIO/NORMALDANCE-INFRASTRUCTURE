#!/bin/bash

# ==============================================
# üîê NORMAL DANCE SECRET GENERATOR
# ==============================================
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è openssl
if ! command -v openssl &> /dev/null; then
    echo "–û—à–∏–±–∫–∞: openssl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
SECRETS_FILE=".env.secrets"
if [ ! -f "$SECRETS_FILE" ]; then
    touch "$SECRETS_FILE"
    log_info "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å–µ–∫—Ä–µ—Ç–æ–≤: $SECRETS_FILE"
else
    log_warning "–§–∞–π–ª —Å–µ–∫—Ä–µ—Ç–æ–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
    cp "$SECRETS_FILE" "$SECRETS_FILE.backup.$(date +%Y%m%d_%H%M%S)"
fi

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ–∫—Ä–µ—Ç–∞
generate_secret() {
    local name=$1
    local length=${2:-32}
    local secret=$(openssl rand -base64 $length | tr -d "=+/" | cut -c1-$length)

    echo "$name=$secret" >> "$SECRETS_FILE"

    # –¢–∞–∫–∂–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    printf "%-25s = %s\n" "$name" "$secret"
}

log_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤..."

echo
echo "=========================================="
echo "üîê –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ï –°–ï–ö–†–ï–¢–´"
echo "=========================================="
echo

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è NextAuth —Å–µ–∫—Ä–µ—Ç (32 –±–∞–π—Ç–∞)
generate_secret "NEXTAUTH_SECRET" 32

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç (32 –±–∞–π—Ç–∞)
generate_secret "JWT_SECRET" 32

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Database –ø–∞—Ä–æ–ª—å (16 —Å–∏–º–≤–æ–ª–æ–≤)
generate_secret "DB_PASSWORD" 16

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Redis –ø–∞—Ä–æ–ª—å (16 —Å–∏–º–≤–æ–ª–æ–≤)
generate_secret "REDIS_PASSWORD" 16

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è API –∫–ª—é—á –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (24 —Å–∏–º–≤–æ–ª–∞)
generate_secret "API_SECRET_KEY" 24

echo
echo "=========================================="
echo

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è UUID –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
APP_ID=$(cat /proc/sys/kernel/random/uuid 2>/dev/null || uuidgen 2>/dev/null || openssl rand -hex 16)
echo "APP_ID=$APP_ID" >> "$SECRETS_FILE"
printf "%-25s = %s\n" "APP_ID" "$APP_ID"

echo
log_success "–°–µ–∫—Ä–µ—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $SECRETS_FILE"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env.production —Å –Ω–æ–≤—ã–º–∏ —Å–µ–∫—Ä–µ—Ç–∞–º–∏
create_production_env() {
    if [ -f ".env" ]; then
        log_info "–°–æ–∑–¥–∞–Ω–∏–µ production —Ñ–∞–π–ª–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        cp ".env" ".env.production"

        # –ó–∞–º–µ–Ω–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã
        while IFS='=' read -r key value; do
            if [ ! -z "$key" ] && [ ! -z "$value" ]; then
                # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                [[ $key =~ ^#.*$ ]] && continue
                [[ -z "$key" ]] && continue

                # –ù–∞–π—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–µ–∫—Ä–µ—Ç –≤ —Ñ–∞–π–ª–µ —Å–µ–∫—Ä–µ—Ç–æ–≤
                secret_value=$(grep "^${key}=" "$SECRETS_FILE" | cut -d'=' -f2-)

                if [ ! -z "$secret_value" ]; then
                    sed -i.bak "s|^${key}=.*|${key}=${secret_value}|" ".env.production"
                fi
            fi
        done < "$SECRETS_FILE"

        log_success "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.production —Å –Ω–æ–≤—ã–º–∏ —Å–µ–∫—Ä–µ—Ç–∞–º–∏"
    else
        log_warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ production —Ñ–∞–π–ª–∞"
    fi
}

# –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ production —Ñ–∞–π–ª–∞
read -p "–°–æ–∑–¥–∞—Ç—å .env.production —Å –Ω–æ–≤—ã–º–∏ —Å–µ–∫—Ä–µ—Ç–∞–º–∏? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    create_production_env
fi

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
echo
echo "=========================================="
echo "üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ"
echo "=========================================="
echo
log_info "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –≤ Vercel Dashboard"
log_info "2. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ —Ñ–∞–π–ª—ã —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ Git"
log_info "3. –•—Ä–∞–Ω–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ"
log_info "4. –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã (–∫–∞–∂–¥—ã–µ 90 –¥–Ω–µ–π)"
echo
log_warning "–í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è 'your-*' –∏ 'GENERATE_NEW_SECRET_HERE' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è!"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –≤ .env
if [ -f ".env" ]; then
    PLACEHOLDERS=$(grep -c "your-\|GENERATE_NEW_SECRET_HERE" .env || true)
    if [ "$PLACEHOLDERS" -gt 0 ]; then
        log_warning "–ù–∞–π–¥–µ–Ω–æ $PLACEHOLDERS –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –≤ .env —Ñ–∞–π–ª–µ"
        log_info "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: ./generate-secrets.sh –¥–ª—è –∑–∞–º–µ–Ω—ã –≤—Å–µ—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤"
    fi
fi

echo
log_success "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"