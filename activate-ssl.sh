#!/bin/bash

echo "üîí –ê–∫—Ç–∏–≤–∞—Ü–∏—è HTTPS —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º..."

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
mkdir -p /etc/nginx/ssl

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
echo "üìú –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
ls -la /etc/letsencrypt/live/ 2>/dev/null || echo "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç Let's Encrypt –Ω–µ –Ω–∞–π–¥–µ–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
cat > /etc/nginx/sites-available/normaldance.ru << 'EOF'
server {
    listen 80;
    server_name normaldance.ru www.normaldance.ru;
    root /var/www/normaldance.ru;
    client_max_body_size 100M;

    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ HTTPS
    return 301 https://$server_name$request_uri;

    # –í–∞–∂–Ω–æ –¥–ª—è Let's Encrypt challenge (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–µ—Ä–µ–≤—ã–ø—É—Å–∫)
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
        access_log off;
        log_not_found off;
    }
}

server {
    listen 443 ssl http2;
    server_name normaldance.ru www.normaldance.ru;
    root /var/www/normaldance.ru;
    client_max_body_size 100M;

    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ—Ç REG.RU / GlobalSign
    # –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å
    ssl_certificate /etc/ssl/certs/normaldance.crt;
    ssl_certificate_key /etc/ssl/private/normaldance.key;

    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: –µ—Å–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ
    # ssl_certificate /etc/letsencrypt/live/normaldance.ru/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/normaldance.ru/privkey.pem;

    # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API —Ä–æ—É—Ç—ã
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã Next.js
    location /_next/static/ {
        proxy_pass http://localhost:3000;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

echo "‚úÖ HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
nginx -t

if [ $? -eq 0 ]; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx
    systemctl reload nginx
    echo "‚úÖ Nginx –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å HTTPS"

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTPS
    echo "üåç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTPS..."
    sleep 3

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP (–¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ HTTPS)
    HTTP_STATUS=$(curl -s -I http://89.104.67.165/ | head -1)
    echo "HTTP —Å—Ç–∞—Ç—É—Å: $HTTP_STATUS"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS (–µ—Å–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
    HTTPS_STATUS=$(curl -s -I -k https://89.104.67.165/ 2>/dev/null | head -1 || echo "HTTPS –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
    echo "HTTPS —Å—Ç–∞—Ç—É—Å: $HTTPS_STATUS"

    echo ""
    echo "üéâ HTTPS –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!"
    echo ""
    echo "üìã –î–û–°–¢–£–ü –ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Æ:"
    echo "‚Ä¢ https://normaldance.ru/"
    echo "‚Ä¢ https://www.normaldance.ru/"
    echo "‚Ä¢ https://89.104.67.165/"
    echo ""
    echo "üìú –°–ï–†–¢–ò–§–ò–ö–ê–¢ –î–ï–ô–°–¢–í–£–ï–¢ –î–û: 05.05.2026"

else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    exit 1
fi

echo ""
echo "üìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ:"
echo "   /etc/ssl/certs/normaldance.crt"
echo "   /etc/ssl/private/normaldance.key"
echo ""
echo "2. –ò–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
echo ""
echo "3. –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ cron:"
echo "   crontab -e"
echo "   –î–æ–±–∞–≤–∏—Ç—å: 0 3 1 * * certbot renew --quiet"